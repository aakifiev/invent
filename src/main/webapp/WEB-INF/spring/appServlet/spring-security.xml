<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <http auto-config="true">
        <intercept-url pattern="/persons**" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/hello**" access="hasRole('ROLE_ADMIN')" />
        <form-login
            login-page="/login"
            login-processing-url="/j_spring_security_check"
            default-target-url="/person"
            authentication-failure-url="/login?error"
            username-parameter="username"
            password-parameter="password"/>
        <logout logout-success-url="/login?logout"/>
        <csrf/>
    </http>

    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="akifev" password="123456" authorities="ROLE_USER" />
            </user-service>
        </authentication-provider>
    </authentication-manager>

<!--    <beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
        <beans:property name="rolePrefix" value=""/>
    </beans:bean>

    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:constructor-arg name="decisionVoters" ref="roleVoter"/>
    </beans:bean>-->

<!--    <http authentication-manager-ref="jdbc-auth" access-decision-manager-ref="accessDecisionManager">
        &lt;!&ndash;<intercept-url pattern="/emp/**" access="Admin"/>&ndash;&gt;
        <form-login login-page="/login" authentication-failure-url="/denied"
                    username-parameter="username" password-parameter="password" default-target-url="/home"/>
        <logout invalidate-session="true" logout-success-url="/login" logout-url="/j_spring_security_logout"/>
        <access-denied-handler error-page="/denied"/>
        <session-management invalid-session-url="/login">
            <concurrency-control max-sessions="1" expired-url="/login"/>
        </session-management>

    </http>-->

<!--    <authentication-manager id="in-memory-auth">
        <authentication-provider>
            <user-service>
                <user name="Akifev" authorities="Admin" password="123"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>

    <authentication-manager id="dao-auth">
        <authentication-provider user-service-ref="userDetailsService">
        </authentication-provider>
    </authentication-manager>-->

<!--
    <beans:bean id="userDetailsService"
                class="ru.aakifiev.security.dao.AppUserDetailsServiceDAO" />

    <http auto-config="true">
        <intercept-url pattern="/home**" access="hasRole(ROLE_ADMIN)"/>
    </http>
    &lt;!&ndash;<authentication-manager id="jdbc-auth">&ndash;&gt;
    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="admin" password="123" authorities="ROLE_ADMIN"/>
            </user-service>
&lt;!&ndash;            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="select username,password,enabled from person where username = ?"
                               authorities-by-username-query="select username,role from roles where username = ?"/>&ndash;&gt;
        </authentication-provider>
    </authentication-manager>

    &lt;!&ndash; MySQL DB DataSource &ndash;&gt;
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="org.postgresql.Driver"/>
        <beans:property name="url" value="jdbc:postgresql://localhost:5432/invent"/>
        <beans:property name="username" value="postgres"/>
        <beans:property name="password" value="ChIp16OK88"/>
    </beans:bean>
-->

    <!-- If DataSource is configured in Tomcat Servlet Container -->
<!--    <beans:bean id="dbDataSource"
                class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="java:comp/env/jdbc/MyLocalDB" />
    </beans:bean>-->

</beans:beans>